name: Build

on:
    push:
    pull_request:

jobs:
    build:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ ubuntu-latest, windows-latest, macos-latest ]

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Set up dependencies (Linux)
                if: runner.os == 'Linux'
                run: |
                    sudo apt update
                    sudo apt install -y cmake ninja-build g++ libgl1-mesa-dev libx11-dev

            -   name: Set up dependencies (macOS)
                if: runner.os == 'macOS'
                run: |
                    brew install cmake ninja

            -   name: Set up MSYS2 with MinGW and Ninja (Windows)
                if: runner.os == 'Windows'
                uses: msys2/setup-msys2@v2
                with:
                    msystem: MINGW64
                    update: true
                    install: >-
                        mingw-w64-x86_64-toolchain
                        mingw-w64-x86_64-cmake
                        mingw-w64-x86_64-ninja

            -   name: Configure (Linux/macOS)
                if: runner.os != 'Windows'
                run: |
                    cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

            -   name: Build (Linux/macOS)
                if: runner.os != 'Windows'
                run: |
                    cmake --build build --config Release

            -   name: Configure (Windows with MinGW + Ninja)
                if: runner.os == 'Windows'
                shell: msys2 {0}
                run: |
                    cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
            #                          -DCMAKE_C_COMPILER=mingw-w64-x86_64-gcc \
            #                          -DCMAKE_CXX_COMPILER=mingw-w64-x86_64-g++

            -   name: Build (Windows with MinGW + Ninja)
                if: runner.os == 'Windows'
                shell: msys2 {0}
                run: |
                    cmake --build build --config Release
